class Solution(object):
    def minimumTotal(self, triangle):
        """
        :type triangle: List[List[int]]
        :rtype: int
        """
        if triangle is None or len(triangle) == 0:
            return None
        former_layer = triangle[0]
        for i in range(1,len(triangle)):
            current_layer = [0 for _ in range(i+1)]
            for j in range(i+1):
                if j == 0:
                    current_layer[j] = former_layer[j] + triangle[i][j]
                elif j == i:
                    current_layer[j] = former_layer[j-1] + triangle[i][j]
                else:
                    current_layer[j] = min(former_layer[j-1],former_layer[j]) + triangle[i][j]
            former_layer = current_layer
        return min(former_layer)
