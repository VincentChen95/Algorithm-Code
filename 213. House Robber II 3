class Solution(object):
    def rob(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if nums is None or len(nums) == 0:
            return 0
        if len(nums) <= 3: return max(nums)
        # divide into two parts, rob the first one and don't rob the last one, or rob last and not first.
        return max(self.helper(nums[1:]), self.helper(nums[:-1]))
        
    def helper(self,nums):
        dp = [0]*len(nums)
        dp[0] = nums[0]
        dp[1] = max(nums[:2])
        for i in range(2,len(nums)):
            dp[i] = max(dp[i-2]+nums[i], dp[i-1])
        return dp[-1]
