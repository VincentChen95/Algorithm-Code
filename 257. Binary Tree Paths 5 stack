# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def binaryTreePaths(self, root):
        """
        :type root: TreeNode
        :rtype: List[str]
        """
        if root is None:
            return []
        result = []
        stack = [(root,'')]
        while stack:
            node, temp = stack.pop()
            temp = str(node.val) if len(temp) == 0 else temp + '->' + str(node.val)
            if node.left is None and node.right is None:
                result.append(temp)
            if node.right:
                stack.append((node.right, temp))
            if node.left:
                stack.append((node.left, temp))
        return result
