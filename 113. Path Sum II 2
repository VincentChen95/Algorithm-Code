# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def pathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: List[List[int]]
        """
        if not root:return []
        result = []
        self.helper(result,root,sum-root.val,[root.val])
        return result
    def helper(self,result,node,target,temp):
        if not node.left and not node.right:
            if target == 0:
                result.append(temp[:])
                return
        if node.left:
            self.helper(result,node.left,target-node.left.val,temp+[node.left.val])
        if node.right:
            self.helper(result,node.right,target-node.right.val,temp+[node.right.val])
