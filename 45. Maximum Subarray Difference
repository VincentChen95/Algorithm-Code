class Solution:
    """
    @param nums: A list of integers
    @return: An integer indicate the value of maximum difference between two substrings
    """
    def maxDiffSubArrays(self, nums):
        # write your code here
        if nums == None or len(nums) <= 1:
            return None
            
        n = len(nums)
        r_max_sum,r_max_,r_min_sum,r_min_ = [nums[0]]*n,[nums[0]]*n,[nums[0]]*n,[nums[0]]*n
        l_max_sum,l_max_,l_min_sum,l_min_ = [nums[-1]]*n,[nums[-1]]*n,[nums[-1]]*n,[nums[-1]]*n
        
        for i in range(1,n):
            r_max_sum[i] = max(nums[i],r_max_sum[i-1]+nums[i])
            r_max_[i] = max(r_max_sum[i],r_max_[i-1])
            
            r_min_sum[i] = min(nums[i],r_min_sum[i-1]+nums[i])
            r_min_[i] = min(r_min_sum[i],r_min_[i-1])
            
            l_max_sum[n-1-i] = max(nums[n-1-i],l_max_sum[n-i]+nums[n-1-i])
            l_max_[n-1-i] = max(l_max_sum[n-1-i],l_max_[n-i])
            
            l_min_sum[n-1-i] = min(nums[n-1-i],l_min_sum[n-i]+nums[n-1-i])
            l_min_[n-1-i] = min(l_min_sum[n-1-i],l_min_[n-i])
            
        dif = -sys.maxsize
        
        for i in range(n-1):
            d = max(abs(r_max_sum[i] - l_min_sum[i+1]),abs(r_min_sum[i] - l_max_sum[i+1]))
            dif = max(d,dif)
        
        return dif
        
