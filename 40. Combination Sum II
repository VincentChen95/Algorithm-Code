class Solution:
    def __init__(self):
        self.result = []
        
    def combinationSum2(self, candidates, target):
        """
        :type candidates: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        if candidates == None or len(candidates) == 0:
            return []
        candidates = sorted(candidates)
        self.dfs([],0,candidates,target)
        return self.result
    
    def dfs(self,temp,index,candidates,target):
        if target == 0 and temp not in self.result:
            self.result.append(list(temp))
            return
        elif target < 0:
            return
        
        for i in range(index,len(candidates)):
            self.dfs(temp+[candidates[i]],i+1,candidates,target-candidates[i])
        
