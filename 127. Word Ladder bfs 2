class Solution(object):
    def ladderLength(self, beginWord, endWord, wordList):
        """
        :type beginWord: str
        :type endWord: str
        :type wordList: List[str]
        :rtype: int
        """
        wordList = set(wordList)
        queue = collections.deque([(beginWord,1)])
        ls = string.ascii_lowercase
        visited = set()
        while queue:
            word,dis = queue.popleft()
            if word == endWord:
                return dis
            for i in range(len(word)):
                for j in ls:
                    if j != word[i]:
                        next_ = word[:i] + j + word[i+1:]
                        if next_ not in visited and next_ in wordList:
                            queue.append((next_,dis+1))
                            visited.add(next_)
        return 0
    
