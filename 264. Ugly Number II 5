class Solution(object):
    def nthUglyNumber(self, n):
        """
        :type n: int
        :rtype: int
        """
        ugly_sequence = [1]
        index_2 = index_3 = index_5 = 0
        while len(ugly_sequence) < n:
            ugly_2 = ugly_sequence[index_2]*2
            ugly_3 = ugly_sequence[index_3]*3
            ugly_5 = ugly_sequence[index_5]*5
            min_value = min(ugly_2, ugly_3, ugly_5)
            ugly_sequence.append(min_value)
            # 注意，以下是三个if，有时候会出现ugly_2 == ugly3的情况，则都需要移动
            if min_value == ugly_2:
                index_2 += 1
            if min_value == ugly_3:
                index_3 += 1
            if min_value == ugly_5:
                index_5 += 1
        return ugly_sequence[-1]
        
        
#         (1) 1×2, 2×2, 3×2, 4×2, 5×2, …

#         (2) 1×3, 2×3, 3×3, 4×3, 5×3, …

#         (3) 1×5, 2×5, 3×5, 4×5, 5×5, …
            # factor_2_index 等指的是上述三个式子中的1，2，3.。。。
