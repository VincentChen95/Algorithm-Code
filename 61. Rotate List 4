# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def rotateRight(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: ListNode
        """
        if head is None:
            return head
        count = 0
        temp = head
        while temp:
            count += 1
            temp = temp.next
        k %= count
        if k == 0:
            return head
        fast = slow = head
        while fast and fast.next:
            fast = fast.next
            k -= 1
            if k < 0:
                slow = slow.next
        temp = slow.next
        slow.next = None
        fast.next = head
        return temp
            
        
