class Solution:
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        if not grid or len(grid) == 0 or len(grid[0]) == 0:
            return 0
        
        row = len(grid)
        col = len(grid[0])
        
        min_sum = [[None]*col]*row
        min_sum[0][0] = grid[0][0]
        
        for i in range(row):
            for j in range(col):
                if i == 0 and j >= 1:
                    min_sum[i][j] = min_sum[i][j-1] +  grid[i][j]
                elif j == 0 and i >= 1:
                    min_sum[i][j] = min_sum[i-1][j] +  grid[i][j]
                elif i >=1 and j >= 1:
                    min_sum[i][j] = min(min_sum[i-1][j],min_sum[i][j-1]) + grid[i][j]
                    
        return min_sum[row-1][col-1]
