class Solution(object):
    def generateParenthesis(self, n):
        """
        :type n: int
        :rtype: List[str]
        """
        if n <= 0:
            return ''
        result = []
        self.dfs(result, n, n, '')
        return result
    
    def dfs(self, result, left_remain, right_remain, temp):
        if right_remain < left_remain or left_remain < 0 or right_remain < 0:
            return 
        if right_remain == 0 and right_remain == left_remain:
            result.append(temp)
            return
        self.dfs(result, left_remain - 1, right_remain, temp + '(')
        self.dfs(result, left_remain, right_remain - 1, temp + ')')
