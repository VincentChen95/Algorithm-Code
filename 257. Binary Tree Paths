# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def __init__(self):
        self.result = []
    def binaryTreePaths(self, root):
        """
        :type root: TreeNode
        :rtype: List[str]
        """
        if root == None :
            return []
        self.helper(str(root.val),root)
        return self.result
    def helper(self,string,node):
        if node.left == None and node.right == None:
            self.result.append(string)
            return 
        if node.left != None:
            self.helper(string + '->' + str(node.left.val),node.left)
        if node.right != None:
            self.helper(string + '->' + str(node.right.val),node.right)
