# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def removeNthFromEnd(self, head, n):
        """
        :type head: ListNode
        :type n: int
        :rtype: ListNode
        """
        count = 0
        temp = head
        while count < n:
            temp = temp.next
            count += 1
        # n == len(list)
        if temp is None:
            return head.next
        link = head  
        # n == 1:
        if link.next.next is None:
            link.next = None
            return head
        # other situation
        while temp.next is not None:
            link = link.next
            temp = temp.next
        next_ = link.next.next
        link.next = next_
        return head
