# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def sortedArrayToBST(self, nums):
        """
        :type nums: List[int]
        :rtype: TreeNode
        """
        if nums == None or len(nums) == 0:
            return None
        root = self.helper(nums)
        return root
    
    def helper(self,nums):
        n = len(nums)
        if n == 0:
            return 
        if n == 1:
            node = TreeNode(nums[0])
            return node
        if n == 2:
            node = TreeNode(nums[0])
            node.right = TreeNode(nums[1])
            return node
        mid = n //2
        node = TreeNode(nums[mid])
        node.left = self.helper(nums[:mid])
        node.right = self.helper(nums[mid + 1:])
        return node
