# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def pathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: List[List[int]]
        """
        if not root:
            return []
        
        result = []
        temp = []
        stack = [(root,[root.val],sum)]
        while stack:
            node,temp,sum = stack.pop()
            if not node.left and not node.right:
                if node.val == sum:
                    result.append(list(temp))           
            if node.right:
                stack.append((node.right,temp + [node.right.val],sum-node.val))
            if node.left:
                stack.append((node.left,temp + [node.left.val],sum-node.val))
        return result
