class Solution:
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        if not digits or len(digits) == 0:
            return []
        result = []
        
        def dfs(digits,cur_str):
            if len(digits) == 0:
                result.append(cur_str) 
                return 
            
            words = d[digits[0]]
            for i in words:
                dfs(digits[1:],cur_str+i)
            
        d = {'2': ['a', 'b', 'c'],
            '3': ['d', 'e', 'f'],
            '4': ['g', 'h', 'i'],
            '5': ['j', 'k', 'l'],
            '6': ['m', 'n', 'o'],
            '7': ['p', 'q', 'r', 's'],
            '8': ['t', 'u', 'v'],
            '9': ['w', 'x', 'y', 'z']}
        
        dfs(digits,'')
        return result
    
