class Solution(object):
    def permuteUnique(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        if not nums or len(nums) == 0:return [[]]
        result = []
        nums.sort()
        self.helper(nums,result,[])
        return result
    
    def helper(self,nums,result,temp):
        if not nums:
            result.append(temp[:])
            return 
        for i in range(len(nums)):
            #如有[1,1,2]，在第一轮循环时，以下的判断会避免产生两个相同的以一开头的array
            #但是对于第一个1，剩下的[1,2]会作为新的nums来参与循环。
            if i > 0 and nums[i] == nums[i-1]:
                continue
            self.helper(nums[:i]+nums[i+1:],result,temp+[nums[i]])
