# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def isPalindrome(self, head):
        """
        :type head: ListNode
        :rtype: bool
        """
        if not head or not head.next:return True
        slow = head
        fast = head.next
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next
        cur = head
        head_2 = slow.next
        slow.next = None
        
        # Reverse
        node = None
        while head_2:
            p = head_2.next
            head_2.next = node
            node = head_2
            head_2 = p
            
        while node:
            if cur.val != node.val:
                return False
            cur = cur.next
            node = node.next
        return True
            
