class Solution:
    """
    @param numbers: Give an array numbers of n integer
    @return: Find all unique triplets in the array which gives the sum of zero.
    """
    def threeSum(self, numbers):
        # write your code here
        if numbers == None or len(numbers) < 3:
            return 
        
        numbers.sort()
        result = []
        n = len(numbers)
        
        for i in range(n-2):
            if numbers[i] == numbers[i-1] and i > 0:
                continue
            target = - numbers[i]
            start = i + 1
            end = n - 1
            while start < end:
                while start < end and numbers[start] + numbers[end] < target:
                    start += 1
                while start < end and numbers[start] + numbers[end] > target:
                    end -= 1
                if start < end and numbers[start] + numbers[end] == target:
                    result.append([-target, numbers[start],numbers[end]])
                    start += 1
                    end -= 1
                    while start < end and numbers[start] == numbers[start-1]:
                        start += 1
                    while start < end and numbers[end] == numbers[end+1]:
                        end -= 1
        return result
