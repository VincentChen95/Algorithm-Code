class Solution:
    """
    @param grid: a list of lists of integers
    @return: An integer, minimizes the sum of all numbers along its path
    """
    def minPathSum(self, grid):
        # write your code here
        if grid == None or len(grid) == 0:
            return 0
            
        m = len(grid)
        n = len(grid[0])
        sum_grid = [[None]*n]*m
        
        for i in range(m):
            for j in range(n):
                if i ==0 and j==0:
                    sum_grid[0][0] = grid[0][0]
                elif i == 0 and j > 0:
                    sum_grid[i][j] = sum_grid[i][j-1] + grid[i][j]
                elif j == 0 and i > 0:
                    sum_grid[i][j] = sum_grid[i-1][j] + grid[i][j]
                else:
                    sum_grid[i][j] = min(sum_grid[i-1][j],sum_grid[i][j-1]) + grid[i][j]
        return sum_grid[m-1][n-1]
