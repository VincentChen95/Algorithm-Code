# Definition for binary tree with next pointer.
# class TreeLinkNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
#         self.next = None

class Solution:
    # @param root, a tree link node
    # @return nothing
    def connect(self, root):
        if root is None:
            return None
        queue = collections.deque([root])
        while queue:
            iteration = len(queue)
            for i in range(iteration):
                node = queue.popleft()
                node.next = queue[0] if i != iteration - 1 else None
                if node.left is not None:
                    queue.append(node.left)
                if node.right is not None:
                    queue.append(node.right)
        return root
