public class Solution {
    /**
     * @param root: The root of binary tree.
     * @return: An integer
     */
    public int maxDepth(TreeNode root) {
        // write your code here
        if(root == null){
            return 0;
        }
        int left = maxDepth(root.left);
        int right = maxDepth(root.right);
        return Math.max(left,right) + 1;
    }
}

public class Solution {
    /**
     * @param root: The root of binary tree.
     * @return: An integer
     */
    private int depth;
    public int maxDepth(TreeNode root) {
        // write your code here
        if(root == null){
            return 0;
        }
        depth = 0;
        helper(root,1);
        return depth;
    }
    private void helper(TreeNode root, int count){
        if(root == null){
            return ;
        }
        if(count > depth){
            depth = count;
        }
        helper(root.left,count+1);
        helper(root.right,count+1);
    }
}
