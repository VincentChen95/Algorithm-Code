class Solution(object):
    def kSmallestPairs(self, nums1, nums2, k):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :type k: int
        :rtype: List[List[int]]
        """
        if len(nums1) == 0 or len(nums2) == 0:
            return []
        result = []
        start_1 = 1
        heap = []
        for i in range(len(nums2)):
            heap.append([nums1[0] + nums2[i], 0, i])
        heapq.heapify(heap)
        while len(result) < min(k, len(nums1)*len(nums2)) and len(heap) > 0:
            _, i, j = heapq.heappop(heap)
            result.append([nums1[i], nums2[j]])
            if i + 1< len(nums1):
                heapq.heappush(heap, [nums1[i + 1] + nums2[j], i + 1, j])
                i += 1
        return result
        # time comlexity is O(N*logN)
