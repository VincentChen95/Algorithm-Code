class Solution(object):
    def maxProduct(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if nums is None or len(nums) == 0:
            return 0
        min_value = max_value = result = nums[0]
        for i in nums[1:]:
            temp = min_value
            min_value = min(max_value*i, i, min_value*i)
            max_value = max(max_value*i, i, temp*i)
            result = max(result, max_value)
        return result
        
        
        we need to use two variable to save the local max and local min value. meanwhile, we need to use 'temp'. it's important
