class NumMatrix(object):

    def __init__(self, matrix):
        """
        :type matrix: List[List[int]]
        """
        if matrix is None or len(matrix) == 0:
            return None
        row = len(matrix)
        col = len(matrix[0])
        self.sum = [[0]*(col + 1) for _ in range(row + 1)]
        for i in range(row + 1):
            for j in range(col + 1):
                self.sum[i][j] = self.sum[i - 1][j] + self.sum[i][j - 1] + matrix[i - 1][j - 1] - self.sum[i - 1][j - 1]

    def sumRegion(self, row1, col1, row2, col2):
        """
        :type row1: int
        :type col1: int
        :type row2: int
        :type col2: int
        :rtype: int
        """
        row1, col1, row2, col2 = row1+1, col1+1, row2+1, col2+1
        return self.sum[row2][col2] - self.sum[row2][col1-1] - self.sum[row1-1][col2] + self.sum[row1-1][col1-1]


# Your NumMatrix object will be instantiated and called as such:
# obj = NumMatrix(matrix)
# param_1 = obj.sumRegion(row1,col1,row2,col2)
