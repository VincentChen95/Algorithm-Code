"""
# Definition for a Node.
class Node(object):
    def __init__(self, val, neighbors):
        self.val = val
        self.neighbors = neighbors
"""
class Solution(object):
    def cloneGraph(self, node):
        """
        :type node: Node
        :rtype: Node
        """
        if node is None:
            return None
        stack = [node]
        new_node = Node(node.val, [])
        dic = {node:new_node}
        while stack:
            node_ = stack.pop()
            for neighbor in node_.neighbors:
                if neighbor not in dic:
                    stack.append(neighbor)
                    dic[neighbor] = Node(neighbor.val, [])
                dic[node_].neighbors.append(dic[neighbor])
        return dic[node]
