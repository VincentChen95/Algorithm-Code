"""
Definition of ListNode
class ListNode(object):
    def __init__(self, val, next=None):
        self.val = val
        self.next = next
"""

class Solution:
    """
    @param head: The head of linked list.
    @return: You should return the head of the sorted linked list, using constant space complexity.
    """
    def sortList(self, head):
        # write your code here
        
        def merge(list_1,list_2):
            if list_1 == None:
                return list_2
            if list_2 == None:
                return list_1
                
            head = None
            if list_1.val <= list_2.val:
                head = list_1
                list_1 = list_1.next
            else:
                head = list_2
                list_2 = list_2.next
                
            temp = head
            while list_1 != None and list_2 != None:
                if list_1.val <= list_2.val:
                    temp.next = list_1
                    temp = list_1
                    list_1 = list_1.next
                    
                else:
                    temp.next = list_2
                    temp = temp.next
                    list_2 = list_2.next
            if list_1 != None:
                temp.next = list_1
            if list_2 != None:
                temp.next = list_2
            return head
        
        if head == None or head.next == None:
            return head
        
        slow, fast = head,head
        while fast.next !=None and fast.next.next != None:
            slow = slow.next
            fast = fast.next.next
        mid = slow.next
        slow.next = None
        
        list_1 = self.sortList(head)
        list_2 = self.sortList(mid)
        sort_list = merge(list_1,list_2)
        return sort_list
